#!/bin/bash

current_directory=$(pwd)

# Ensure the directory ends with "/compiler/"
if [[ $current_directory != */compiler/ ]]; then
    current_directory="$current_directory/compiler"
fi

lib_sa_directory=$current_directory"/deps/static_assertions-1.1.0/src/lib.rs"
lib_fnv_directory=$current_directory"/deps/fnv-1.0.7/lib.rs"
lib_mc_directory=$current_directory"/deps/memchr-2.6.3/src/lib.rs"
lib_rs_directory=$current_directory"/deps/regex-syntax-0.7.5/src/lib.rs"
lib_arena_directory=$current_directory"/deps/arena/src/lib.rs"
lib_ah_directory=$current_directory"/deps/aho-corasick-1.1.1/src/lib.rs"
lib_ra_directory=$current_directory"/deps/regex-automata-0.3.8/src/lib.rs"
lib_r_directory=$current_directory"/deps/regex-1.9.5/src/lib.rs"
vm_ast_directory=$current_directory"/vm/ast.rs"
vm_symtab_directory=$current_directory"/vm/symtab.rs"
vm_state_directory=$current_directory"/vm/state.rs"
vm_support_directory=$current_directory"/vm/support.rs"
vm_avm_directory=$current_directory"/vm/avm.rs"
bin_directory=$current_directory"/bin/"
dep_directory=$current_directory"/dep/"

# Compile the lib.rs files
rustc --crate-name static_assertions $lib_sa_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --cap-lints allow
rustc --crate-name fnv $lib_fnv_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --cap-lints allow
rustc --crate-name memchr --edition=2021 $lib_mc_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"alloc\"" --cfg "feature=\"default\"" --cfg "feature=\"std\"" -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --cap-lints allow
rustc --crate-name regex_syntax --edition=2021 $lib_rs_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"default\"" --cfg "feature=\"std\"" --cfg "feature=\"unicode\"" --cfg "feature=\"unicode-age\"" --cfg "feature=\"unicode-bool\"" --cfg "feature=\"unicode-case\"" --cfg "feature=\"unicode-gencat\"" --cfg "feature=\"unicode-perl\"" --cfg "feature=\"unicode-script\"" --cfg "feature=\"unicode-segment\"" -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --cap-lints allow
rustc --crate-name shared_arena --edition=2018 $lib_arena_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 --out-dir $bin_directory -L dependency=$bin_directory --extern static_assertions=$bin_directory/libstatic_assertions-1.rmeta
rustc --crate-name ast --edition=2021 $vm_ast_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern fnv=$bin_directory/libfnv-1.rmeta --extern shared_arena=$bin_directory/libshared_arena.rmeta
rustc --crate-name symtab --edition=2021 $vm_symtab_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern ast=$bin_directory/libast-1.rmeta --extern fnv=$bin_directory/libfnv-1.rmeta --extern shared_arena=$bin_directory/libshared_arena.rmeta
rustc --crate-name state --edition=2021 $vm_state_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern ast=$bin_directory/libast-1.rmeta --extern fnv=$bin_directory/libfnv-1.rmeta --extern shared_arena=$bin_directory/libshared_arena.rmeta --extern symtab=$bin_directory/libsymtab-1.rmeta
rustc --crate-name support --edition=2021 $vm_support_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern ast=$bin_directory/libast-1.rmeta --extern shared_arena=$bin_directory/libshared_arena.rmeta --extern state=$bin_directory\libstate-1.rmeta --extern symtab=$bin_directory/libsymtab-1.rmeta
rustc --crate-name aho_corasick --edition=2021 $lib_ah_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"default\"" --cfg "feature=\"perf-literal\"" --cfg "feature=\"std\"" -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern memchr=$bin_directory/libmemchr-1.rmeta --cap-lints allow
rustc --crate-name regex_automata --edition=2021 $lib_ra_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"alloc\"" --cfg "feature=\"dfa-onepass\"" --cfg "feature=\"hybrid\"" --cfg "feature=\"meta\"" --cfg "feature=\"nfa-backtrack\"" --cfg "feature=\"nfa-pikevm\"" --cfg "feature=\"nfa-thompson\"" --cfg "feature=\"perf-inline\"" --cfg "feature=\"perf-literal\"" --cfg "feature=\"perf-literal-multisubstring\"" --cfg "feature=\"perf-literal-substring\"" --cfg "feature=\"std\"" --cfg "feature=\"syntax\"" --cfg "feature=\"unicode\"" --cfg "feature=\"unicode-age\"" --cfg "feature=\"unicode-bool\"" --cfg "feature=\"unicode-case\"" --cfg "feature=\"unicode-gencat\"" --cfg "feature=\"unicode-perl\"" --cfg "feature=\"unicode-script\"" --cfg "feature=\"unicode-segment\"" --cfg "feature=\"unicode-word-boundary\"" -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern aho_corasick=$bin_directory/libaho_corasick-1.rmeta --extern memchr=$bin_directory/libmemchr-1.rmeta --extern regex_syntax=$bin_directory/libregex_syntax-1.rmeta --cap-lints allow
rustc --crate-name regex --edition=2021 $lib_r_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto --cfg "feature=\"default\"" --cfg "feature=\"perf\"" --cfg "feature=\"perf-backtrack\"" --cfg "feature=\"perf-cache\"" --cfg "feature=\"perf-dfa\"" --cfg "feature=\"perf-inline\"" --cfg "feature=\"perf-literal\"" --cfg "feature=\"perf-onepass\"" --cfg "feature=\"std\"" --cfg "feature=\"unicode\"" --cfg "feature=\"unicode-age\"" --cfg "feature=\"unicode-bool\"" --cfg "feature=\"unicode-case\"" --cfg "feature=\"unicode-gencat\"" --cfg "feature=\"unicode-perl\"" --cfg "feature=\"unicode-script\"" --cfg "feature=\"unicode-segment\"" -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern aho_corasick=$bin_directory/libaho_corasick-1.rmeta --extern memchr=$bin_directory/libmemchr-1.rmeta --extern regex_automata=$bin_directory/libregex_automata-1.rmeta --extern regex_syntax=$bin_directory/libregex_syntax-1.rmeta --cap-lints allow
rustc --crate-name avm --edition=2021 $vm_avm_directory --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C linker-plugin-lto -C metadata=1 -C extra-filename=-1 --out-dir $bin_directory -L dependency=$bin_directory --extern ast=$bin_directory/libast-1.rmeta --extern regex=$bin_directory/libregex-1.rmeta --extern shared_arena=$bin_directory/libshared_arena.rmeta --extern state=$bin_directory/libstate-1.rmeta --extern support=$bin_directory/libsupport-1.rmeta --extern symtab=$bin_directory/libsymtab-1.rmeta

# compile the final executable
rustc --crate-name $1 --edition=2021 $2 --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C lto -C metadata=1 --out-dir $bin_directory -L dependency=$bin_directory --extern ast=$bin_directory/libast-1.rlib --extern avm=$bin_directory/libavm-1.rlib --extern shared_arena=$bin_directory/libshared_arena.rlib --extern state=$bin_directory/libstate-1.rlib --extern support=$bin_directory/libsupport-1.rlib --extern symtab=$bin_directory/libsymtab-1.rlib

mv $current_directory/bin/$1 $current_directory/exe

read -p "Press any key to continue" x