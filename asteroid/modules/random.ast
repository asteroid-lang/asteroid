------------------------------------------------------------------
-- random.ast
--
-- this module implements the random numbers
--
-- (c) University of Rhode Island
------------------------------------------------------------------

------------------------------------------------------------------
function random
------------------------------------------------------------------
-- return a random floating point number in the range [0.0, 1.0).
with none do return escape
"
import random
global __retval__

__retval__ = ('real', random.random())
"
end

------------------------------------------------------------------
function randint -- random interval
------------------------------------------------------------------
-- return a random value N in the interval lo <= N <= hi.
-- The type of the random value depends on the types of the
-- values specifying the interval.
with (lo:%integer,hi:%integer) do return escape
"
import random
from asteroid.support import assert_match
global __retval__

lo_val = state.symbol_table.lookup_sym('lo')
hi_val = state.symbol_table.lookup_sym('hi')

__retval__ = ('integer', random.randint(lo_val[1], hi_val[1]))
"
with (lo:%real,hi:%real) do return escape
"
import random
from asteroid.support import assert_match
global __retval__

lo_val = state.symbol_table.lookup_sym('lo')
hi_val = state.symbol_table.lookup_sym('hi')

__retval__ = ('real', random.uniform(lo_val[1], hi_val[1]))
"
with (_,_) do
  throw Error("unsupported interval specification in randint").
end

------------------------------------------------------------------
function seed
------------------------------------------------------------------
-- provide a seed value for the random number generator
with (sd:%integer) do escape
"
import random
from asteroid.support import assert_match

sd_val = state.symbol_table.lookup_sym('sd')
random.seed(sd_val[1])
"
end

