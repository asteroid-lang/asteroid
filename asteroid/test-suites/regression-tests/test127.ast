
-- This tests is for ELIF line number reporting


escape
" 
from asteroid.interp import interp
from asteroid.state import state

print(1)

program = ''
program += 'let x = 1.\n'
program += 'let y = 0.\n'
program += '\n'
program += 'if ( x < 0) do\n'
program += '    ...\n'
program += 'elif ( x / y < 1 ) do-- division by zero \n'
program += '    ...\n'
program += 'end\n'

try:
    interp(program,exceptions=True)
except:
    pass

assert( state.lineinfo[1] == 6)

print(2)

program = ''
program += 'let x = 1.\n'
program += 'let y = 0.\n'
program += '\n'
program += 'function foo\n'
program += '    with none do\n'
program += '        if ( x < 0) do\n'
program += '            ...\n'
program += '        elif ( x / y < 1 ) do-- division by zero \n'
program += '            ...\n'
program += '        end\n'
program += '    end\n'
program += '\n'
program += 'foo().\n'

try:
    interp(program,exceptions=True)
except:
    pass

assert( state.lineinfo[1] == 8)

print(3)

program = ''
program += 'let x = 1.\n'
program += 'let y = 0.\n'
program += '\n'
program += 'function foo\n'
program += '    with none do\n'
program += '        if ( x < 0) do\n'
program += '            ...\n'
program += '        elif ( x < 0 ) do\n'
program += '            ...\n'
program += '        elif ( x < -1 ) do\n'
program += '            ...\n'
program += '        elif ( x / y < 1 ) do-- division by zero \n'
program += '            ...\n'
program += '        elif ( x < 10 ) do\n'
program += '            ...\n'
program += '        end\n'
program += '    end\n'
program += '\n'
program += 'foo().\n'

try:
    interp(program,exceptions=True)
except:
    pass

assert( state.lineinfo[1] == 12)

print(4)

program = ''
program += 'let x = 1.\n'
program += 'let y = 0.\n'
program += '\n'
program += 'while (true) do\n'
program += '    if ( x < 0) do\n'
program += '        ...\n'
program += '    elif ( x < 1 ) do\n'
program += '        ...\n'
program += '    elif ( x < -1 ) do\n'
program += '        ...\n'
program += '    elif ( x < -2 ) do\n'
program += '        ...\n'
program += '    elif ( x / y < 1 ) do -- error\n'
program += '        ...\n'
program += '    elif ( x < -11 ) do\n'
program += '        ...\n'
program += '    elif ( x < 11 ) do\n'
program += '        ...\n'
program += '    end\n'
program += 'end\n'

try:
    interp(program,exceptions=True)
except:
    pass
    
assert( state.lineinfo[1] == 13 )
"
