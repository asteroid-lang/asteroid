
load system io.
load "util".

-- UPDATED 6-28-21 to reflect issue #27 resolution
--------------------------------------------------TEST1--
try
    let (x,x) = (1,1).
    io @println x.

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST2--
try
    let [x,w,y,[a,b,x]] = [1,2,3,[1,2,1]].
    io @println x.

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST3--
try
    let (name:%string,name:%string) = ("a","a").

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST4--
try
    let p1 = pattern with x.
    let p2 = pattern with x.
    let p3 = pattern with (*p1,*p2).
    let *p3 = ("a","a").

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST5--
try
    let false = ((1,1) is (x,x)).

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST6--
try
    function foo
        with (x,x) do
            return 1.
        with (x,y) do
            return 2.
        with x do
            return 3.
        end.

    foo( (1,1) ).

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST7--
try
    let myList = [ (1,1) , (2,2) , (3,3) ].
    let counter = 0.

    for (x,x) in myList do
        let counter = counter + 1.
    end.

    assert(counter == 0).

    for (x,y) in myList do
        let counter = counter + 1.
    end.

    assert(counter == 3).

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST8--
try
    function foo
        with [ x | x | tail ] do
            return 1.
        with [x | y | tail] do
            return 2.
        with x do
            return 3.
        end.

    foo( [1,1,1,1] ).

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------TEST9--
try
    let (x,x:%integer) = (1,1).

    io @println("FAILED.").
    throw Error("FAIL: no error").
catch Exception("NonLinearPatternError", s) do
    io @println("PASSED.").
catch _ do
    io @println("FAILED.").
    throw Error("FAIL: unexpected error").
end.
--------------------------------------------------END----
